---
interface Props {
  starCount?: number;
  meteorCount?: number;
}
  
const { starCount = 200, meteorCount = 3 } = Astro.props;
---

<div class="starry-background" data-starry-background>
  {
    Array.from({ length: starCount }).map((_, i) => (
      <div class="star" style={{
        left: `${Math.random() * 100}%`,
        top: `${Math.random() * 100}%`,
        animationDelay: `${Math.random() * 5}s`,
        opacity: Math.random() * 0.8 + 0.2,
        width: `${Math.random() * 3 + 1}px`,
        height: `${Math.random() * 3 + 1}px`
      }}></div>
    ))
  }
  <!-- 添加一些较大的星星 -->
  {
    Array.from({ length: 5 }).map((_, i) => (
      <div class="star big" style={{
        left: `${Math.random() * 100}%`,
        top: `${Math.random() * 100}%`,
        animationDelay: `${Math.random() * 5}s`,
        opacity: Math.random() * 0.8 + 0.2
      }}></div>
    ))
  }
  <!-- 添加流星 -->
  {
    Array.from({ length: meteorCount }).map((_, i) => (
      <div class="meteor" style={{
        top: `${Math.random() * 50}%`,
        animationDelay: `${Math.random() * 15}s`,
        animationDuration: `${Math.random() * 2 + 1}s`
      }}></div>
    ))
  }
</div>

<style>
  .starry-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
    z-index: -1;
    overflow: hidden;
  }

  .star {
    position: absolute;
    background-color: #fff;
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }

  .star.big {
    width: 4px;
    height: 4px;
    box-shadow: 0 0 15px 2px rgba(255, 255, 255, 0.8);
    animation: twinkleBig 4s infinite ease-in-out;
  }

  .star:not(.big) {
    width: calc(var(--size, 1) * 1px);
    height: calc(var(--size, 1) * 1px);
    animation: twinkle var(--duration, 5s) infinite ease-in-out;
  }

  @keyframes twinkle {
    0%, 100% {
      opacity: var(--min-opacity, 0.2);
    }
    50% {
      opacity: var(--max-opacity, 1);
    }
  }
  
  @keyframes twinkleBig {
    0%, 100% {
      opacity: 0.3;
      transform: scale(0.8);
    }
    50% {
      opacity: 1;
      transform: scale(1.2);
    }
  }
  
  .meteor {
    position: absolute;
    right: -100px;
    width: 100px;
    height: 2px;
    background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 50%, rgba(255,255,255,0) 100%);
    transform: rotate(-45deg);
    animation: meteor linear infinite;
    opacity: 0;
  }
  
  @keyframes meteor {
    0% {
      opacity: 0;
      transform: translateX(0) translateY(0) rotate(-45deg);
    }
    10% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: translateX(-100vw) translateY(100vh) rotate(-45deg);
    }
  }
</style>